<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */$security = ($username == "reda" && $password == "1234"); ?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>
<?php /* $host = 'localhost'; */ /* $dbname = 'your_database'; */ /* $username = 'root'; */ /* $password = ''; */ /* Fonction d'inscription */ /*function registerUser($pdo, $email, $password) { $hashed_password = password_hash($password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (:email, :password)'); $stmt->execute(['email' => $email, 'password' => $hashed_password]); return $pdo->lastInsertId(); } function loginUser($pdo, $email, $password) { $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email'); $stmt->execute(['email' => $email]); $user = $stmt->fetch(PDO::FETCH_ASSOC); if ($user && password_verify($password, $user['password'])) { session_start(); $_SESSION['user_id'] = $user['id']; return true; } else { return false; } } function logoutUser() { session_start(); session_unset(); session_destroy(); } function getUser($pdo, $user_id) { $stmt = $pdo->prepare('SELECT * FROM users WHERE id = :id'); $stmt->execute(['id' => $user_id]); return $stmt->fetch(PDO::FETCH_ASSOC); } function updateUserProfile($pdo, $user_id, $new_email, $new_password) { $hashed_password = password_hash($new_password, PASSWORD_BCRYPT); $stmt = $pdo->prepare('UPDATE users SET email = :email, password = :password WHERE id = :id'); $stmt->execute(['email' => $new_email, 'password' => $hashed_password, 'id' => $user_id ]); } function listUsers($pdo) { $stmt = $pdo->query('SELECT * FROM users'); return $stmt->fetchAll(PDO::FETCH_ASSOC); } $action = $_GET['action'] ?? ''; if ($action === 'register') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; registerUser($pdo, $email, $password); echo 'Utilisateur enregistré avec succès.'; } elseif ($action === 'login') { $email = $_POST['email'] ?? ''; $password = $_POST['password'] ?? ''; if (loginUser($pdo, $email, $password)) { echo 'Connexion réussie.'; } else { echo 'Échec de la connexion.'; } } elseif ($action === 'logout') { logoutUser(); echo 'Déconnexion réussie.'; } elseif ($action === 'update_profile') { $user_id = $_SESSION['user_id'] ?? null; if ($user_id) { $new_email = $_POST['email'] ?? ''; $new_password = $_POST['password'] ?? ''; updateUserProfile($pdo, $user_id, $new_email, $new_password); echo 'Profil mis à jour.'; } else { echo 'Utilisateur non connecté.'; } } elseif ($action === 'list_users') { $users = listUsers($pdo); foreach ($users as $user) { echo 'ID: ' . $user['id'] . ' - Email: ' . $user['email'] . '<br>'; } } else { echo 'Action non reconnue.'; } */?>